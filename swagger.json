{
  "swagger": "2.0",
  "info": {
    "description": "Koa home task",
    "version": "1.0.0",
    "title": "Koa home task",
    "contact": {
      "email": "alex.duka@maddev.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "login",
            "description": "login credentials",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user successfully authenticated",
            "schema": {
              "$ref": "#/definitions/AuthenticationResult"
            }
          },
          "401": {
            "description": "failed to authenticate user",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user data",
            "description": "user information for create an account",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "email",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "Ave Inge"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "ave.inge@mailinator.com"
                },
                "password": {
                  "type": "string",
                  "example": "Qwerty1!"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "$ref": "#/definitions/AuthenticationResult"
            }
          },
          "400": {
            "description": "validations error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user data",
            "description": "update user information",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "email",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "Ave Inge"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "ave.inge@mailinator.com"
                },
                "password": {
                  "type": "string",
                  "example": "Qwerty1!"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "admin"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "validations error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "403": {
            "description": "not enough permissions to update user with provided fields",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": null,
        "description": null,
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "login": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "ValidationErrorMessage": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "login": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "$ref": "#/definitions/ValidationErrorMessage"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "example": "Custom Exception"
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Something was done"
        }
      }
    },
    "AuthenticationResult": {
      "type": "object",
      "required": [
        "token",
        "refreshToken",
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "token": {
          "type": "string",
          "format": "base64"
        },
        "refreshToken": {
          "type": "string",
          "format": "base64"
        }
      }
    }
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/RuLeZzz1987/node-training-koa-home-task/1.0.0",
  "schemes": [
    "https",
    "http"
  ]
}